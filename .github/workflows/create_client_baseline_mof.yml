name: Create Windows client baseline DSC

on:
  push:
    paths:
      - 'windows/desired_state_configuration/**'

jobs:
  build_mof_and_requirements:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Generate MOF
      run: ./windows/desired_state_configuration/scripts/generate_mofs.ps1

    - uses: actions/upload-artifact@v2
      with:
        path: ./mof/localhost.mof

    - uses: actions/upload-artifact@v2
      with:
        path: ./windows/desired_state_configuration/scripts/install_required_modules.ps1

  create_release:
    runs-on: ubuntu-latest
    needs: build_mof_and_requirements
    if: github.ref == 'refs/heads/master'

    steps:
    - name: Download built artifacts # Downloads the artifacts uploaded in the previous job
      uses: actions/download-artifact@v1

    - name: Bump version and push tag # step ID is "bump-version" by default
      uses: anothrNick/github-tag-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        DEFAULT_BUMP: patch
        WITH_V: true
        RELEASE_BRANCHES: master
        INITIAL_VERSION: 0.0.0

    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.bump_version.outputs.new_tag }}
        release_name: Release ${{ steps.bump_version.outputs.new_tag }}
        draft: false
        prerelease: false

    - name: Upload Release Asset (Required Modules)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: install_required_modules.ps1
        asset_name: install_required_modules.ps1
        asset_content_type: text/plain

    - name: Upload Release Asset (MOF)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: localhost.mof
        asset_name: client_baseline.mof
        asset_content_type: text/plain
